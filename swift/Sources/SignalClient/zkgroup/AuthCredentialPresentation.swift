//
// Copyright (C) 2020 Signal Messenger, LLC.
// All rights reserved.
//
// SPDX-License-Identifier: GPL-3.0-only
//
// Generated by zkgroup/codegen/codegen.py - do not edit

import Foundation
import SignalFfi

public class AuthCredentialPresentation : ByteArray {

  public static let SIZE: Int = 493

  public required init(contents: [UInt8]) throws  {
    try super.init(newContents: contents, expectedLength: AuthCredentialPresentation.SIZE)

    try withUnsafePointerToSerialized { contents in
      try checkError(signal_auth_credential_presentation_check_valid_contents(contents))
    }
  }

  public func getUuidCiphertext() throws  -> UuidCiphertext {
    return try withUnsafePointerToSerialized { contents in
      try invokeFnReturningSerialized {
        signal_auth_credential_presentation_get_uuid_ciphertext($0, contents)
      }
    }
  }

  public func getRedemptionTime() throws  -> UInt32 {
    return try withUnsafePointerToSerialized { contents in
      try invokeFnReturningInteger {
        signal_auth_credential_presentation_get_redemption_time($0, contents)
      }
    }
  }

}
